2023-03-08 12:19:41,348 - django.db.backends.schema - DEBUG - INSERT INTO "new__app_customuser" ("id", "password", "last_login", "is_superuser", "username", "is_staff", "is_active", "date_joined", "email", "first_name", "middle_name", "last_name", "pan_number", "phone_number", "created", "created_by", "modified") SELECT "id", "password", "last_login", "is_superuser", "username", "is_staff", "is_active", "date_joined", "email", "first_name", "middle_name", "last_name", "pan_number", "phone_number", "created", "created_by", '2023-03-08 12:19:41.348155' FROM "app_customuser"; (params ())
2023-03-08 12:19:41,355 - django.db.backends - DEBUG - (0.000) INSERT INTO "new__app_customuser" ("id", "password", "last_login", "is_superuser", "username", "is_staff", "is_active", "date_joined", "email", "first_name", "middle_name", "last_name", "pan_number", "phone_number", "created", "created_by", "modified") SELECT "id", "password", "last_login", "is_superuser", "username", "is_staff", "is_active", "date_joined", "email", "first_name", "middle_name", "last_name", "pan_number", "phone_number", "created", "created_by", '2023-03-08 12:19:41.348155' FROM "app_customuser"; args=(); alias=default
2023-03-08 12:19:41,355 - django.db.backends.schema - DEBUG - DROP TABLE "app_customuser"; (params ())
2023-03-08 12:19:41,355 - django.db.backends - DEBUG - (0.000) DROP TABLE "app_customuser"; args=(); alias=default
2023-03-08 12:19:41,355 - django.db.backends.schema - DEBUG - ALTER TABLE "new__app_customuser" RENAME TO "app_customuser"; (params ())
2023-03-08 12:19:41,356 - django.db.backends - DEBUG - (0.000) ALTER TABLE "new__app_customuser" RENAME TO "app_customuser"; args=(); alias=default
2023-03-08 12:19:41,358 - django.db.backends.schema - DEBUG - ALTER TABLE "app_customuser" ADD COLUMN "modified_by" varchar(100) NULL; (params [])
2023-03-08 12:19:41,358 - django.db.backends - DEBUG - (0.000) ALTER TABLE "app_customuser" ADD COLUMN "modified_by" varchar(100) NULL; args=[]; alias=default
2023-03-08 12:19:41,359 - django.db.backends - DEBUG - (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2023-03-08 12:19:41,359 - django.db.backends - DEBUG - (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('app', '0002_alter_bank_options_alter_customerbankaccount_options_and_more', '2023-03-08 12:19:41.359129') RETURNING "django_migrations"."id"; args=('app', '0002_alter_bank_options_alter_customerbankaccount_options_and_more', '2023-03-08 12:19:41.359129'); alias=default
2023-03-08 12:19:41,359 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_key_check; args=None; alias=default
2023-03-08 12:19:41,359 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2023-03-08 12:19:41,359 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2023-03-08 12:19:41,359 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_keys; args=None; alias=default
2023-03-08 12:19:41,360 - django.db.backends - DEBUG - (0.000) BEGIN; args=None; alias=default
2023-03-08 12:19:41,363 - django.db.backends.schema - DEBUG - CREATE TABLE "authtoken_token" ("key" varchar(40) NOT NULL PRIMARY KEY, "created" datetime NOT NULL, "user_id" bigint NOT NULL UNIQUE REFERENCES "app_customuser" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
2023-03-08 12:19:41,363 - django.db.backends - DEBUG - (0.000) CREATE TABLE "authtoken_token" ("key" varchar(40) NOT NULL PRIMARY KEY, "created" datetime NOT NULL, "user_id" bigint NOT NULL UNIQUE REFERENCES "app_customuser" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
2023-03-08 12:19:41,363 - django.db.backends - DEBUG - (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2023-03-08 12:19:41,363 - django.db.backends - DEBUG - (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('authtoken', '0001_initial', '2023-03-08 12:19:41.363554') RETURNING "django_migrations"."id"; args=('authtoken', '0001_initial', '2023-03-08 12:19:41.363554'); alias=default
2023-03-08 12:19:41,363 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_key_check; args=None; alias=default
2023-03-08 12:19:41,364 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2023-03-08 12:19:41,364 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2023-03-08 12:19:41,364 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_keys; args=None; alias=default
2023-03-08 12:19:41,364 - django.db.backends - DEBUG - (0.000) BEGIN; args=None; alias=default
2023-03-08 12:19:41,386 - django.db.backends - DEBUG - (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2023-03-08 12:19:41,387 - django.db.backends - DEBUG - (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('authtoken', '0002_auto_20160226_1747', '2023-03-08 12:19:41.386719') RETURNING "django_migrations"."id"; args=('authtoken', '0002_auto_20160226_1747', '2023-03-08 12:19:41.386719'); alias=default
2023-03-08 12:19:41,387 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_key_check; args=None; alias=default
2023-03-08 12:19:41,388 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2023-03-08 12:19:41,388 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2023-03-08 12:19:41,388 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_keys; args=None; alias=default
2023-03-08 12:19:41,388 - django.db.backends - DEBUG - (0.000) BEGIN; args=None; alias=default
2023-03-08 12:19:41,388 - django.db.backends - DEBUG - (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2023-03-08 12:19:41,389 - django.db.backends - DEBUG - (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('authtoken', '0003_tokenproxy', '2023-03-08 12:19:41.388664') RETURNING "django_migrations"."id"; args=('authtoken', '0003_tokenproxy', '2023-03-08 12:19:41.388664'); alias=default
2023-03-08 12:19:41,389 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_key_check; args=None; alias=default
2023-03-08 12:19:41,389 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2023-03-08 12:19:41,389 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2023-03-08 12:19:41,389 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_keys; args=None; alias=default
2023-03-08 12:19:41,389 - django.db.backends - DEBUG - (0.000) BEGIN; args=None; alias=default
2023-03-08 12:19:41,390 - django.db.backends.schema - DEBUG - CREATE TABLE "kbapp_amc" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "created" datetime NOT NULL, "modified" datetime NOT NULL, "is_active" bool NOT NULL, "modified_by" varchar(100) NULL, "created_by" varchar(100) NULL, "name" varchar(200) NOT NULL UNIQUE, "amfi_nav_download_dropdown_code" integer NULL UNIQUE, "amc_assets_under_management" real NULL, "description" varchar(200) NULL, "is_being_sold" bool NOT NULL, "f_amc_code" varchar(3) NULL, "amc_logo" varchar(100) NOT NULL, "amc_website_url" varchar(200) NULL, "scheme_information_document_url" varchar(200) NULL, "nominee_url" varchar(200) NULL, "expense_ratio_url" varchar(200) NULL, "expense_ratio_url_remarks" varchar(200) NULL, "last_nav_pull_date_from_amfi" date NULL, "rta_amc_code" varchar(64) NULL, "is_isip_available" bool NOT NULL, "cio" varchar(150) NULL, "ceo" varchar(150) NULL, "management_trustee" varchar(200) NULL, "start_date" date NULL, "phone" varchar(50) NULL, "email" varchar(100) NULL, "owner_type" varchar(50) NULL, "address1" varchar(200) NULL, "address2" varchar(200) NULL, "address3" varchar(200) NULL, "city" varchar(100) NULL, "pin" integer NULL, "amc_aum_date" datetime NULL); (params None)
2023-03-08 12:19:41,391 - django.db.backends - DEBUG - (0.000) CREATE TABLE "kbapp_amc" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "created" datetime NOT NULL, "modified" datetime NOT NULL, "is_active" bool NOT NULL, "modified_by" varchar(100) NULL, "created_by" varchar(100) NULL, "name" varchar(200) NOT NULL UNIQUE, "amfi_nav_download_dropdown_code" integer NULL UNIQUE, "amc_assets_under_management" real NULL, "description" varchar(200) NULL, "is_being_sold" bool NOT NULL, "f_amc_code" varchar(3) NULL, "amc_logo" varchar(100) NOT NULL, "amc_website_url" varchar(200) NULL, "scheme_information_document_url" varchar(200) NULL, "nominee_url" varchar(200) NULL, "expense_ratio_url" varchar(200) NULL, "expense_ratio_url_remarks" varchar(200) NULL, "last_nav_pull_date_from_amfi" date NULL, "rta_amc_code" varchar(64) NULL, "is_isip_available" bool NOT NULL, "cio" varchar(150) NULL, "ceo" varchar(150) NULL, "management_trustee" varchar(200) NULL, "start_date" date NULL, "phone" varchar(50) NULL, "email" varchar(100) NULL, "owner_type" varchar(50) NULL, "address1" varchar(200) NULL, "address2" varchar(200) NULL, "address3" varchar(200) NULL, "city" varchar(100) NULL, "pin" integer NULL, "amc_aum_date" datetime NULL); args=None; alias=default
2023-03-08 12:19:41,391 - django.db.backends - DEBUG - (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2023-03-08 12:19:41,391 - django.db.backends - DEBUG - (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('kbapp', '0001_initial', '2023-03-08 12:19:41.391312') RETURNING "django_migrations"."id"; args=('kbapp', '0001_initial', '2023-03-08 12:19:41.391312'); alias=default
2023-03-08 12:19:41,391 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_key_check; args=None; alias=default
2023-03-08 12:19:41,392 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2023-03-08 12:19:41,392 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2023-03-08 12:19:41,392 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_keys; args=None; alias=default
2023-03-08 12:19:41,392 - django.db.backends - DEBUG - (0.000) BEGIN; args=None; alias=default
2023-03-08 12:19:41,392 - django.db.backends.schema - DEBUG - CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL); (params None)
2023-03-08 12:19:41,393 - django.db.backends - DEBUG - (0.000) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL); args=None; alias=default
2023-03-08 12:19:41,393 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_key_check; args=None; alias=default
2023-03-08 12:19:41,393 - django.db.backends.schema - DEBUG - CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params ())
2023-03-08 12:19:41,393 - django.db.backends - DEBUG - (0.000) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=(); alias=default
2023-03-08 12:19:41,393 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2023-03-08 12:19:41,393 - django.db.backends - DEBUG - (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2023-03-08 12:19:41,394 - django.db.backends - DEBUG - (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2023-03-08 12:19:41.394045') RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', '2023-03-08 12:19:41.394045'); alias=default
2023-03-08 12:19:41,394 - django.db.backends - DEBUG - (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2023-03-08 12:19:41,395 - django.db.backends - DEBUG - (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
2023-03-08 12:19:41,398 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
2023-03-08 12:19:41,399 - django.db.backends - DEBUG - (0.000) BEGIN; args=None; alias=default
2023-03-08 12:19:41,399 - django.db.backends - DEBUG - (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
2023-03-08 12:19:41,400 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
2023-03-08 12:19:41,400 - django.db.backends - DEBUG - (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
2023-03-08 12:19:41,401 - django.db.backends - DEBUG - (0.000) BEGIN; args=None; alias=default
2023-03-08 12:19:41,401 - django.db.backends - DEBUG - (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
2023-03-08 12:19:41,402 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
2023-03-08 12:19:41,402 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
2023-03-08 12:19:41,402 - django.db.backends - DEBUG - (0.000) BEGIN; args=None; alias=default
2023-03-08 12:19:41,403 - django.db.backends - DEBUG - (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group'); alias=default
2023-03-08 12:19:41,404 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
2023-03-08 12:19:41,404 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
2023-03-08 12:19:41,405 - django.db.backends - DEBUG - (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3); alias=default
2023-03-08 12:19:41,405 - django.db.backends - DEBUG - (0.000) BEGIN; args=None; alias=default
2023-03-08 12:19:41,405 - django.db.backends - DEBUG - (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group'); alias=default
2023-03-08 12:19:41,406 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
2023-03-08 12:19:41,406 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
2023-03-08 12:19:41,406 - django.db.backends - DEBUG - (0.000) BEGIN; args=None; alias=default
2023-03-08 12:19:41,406 - django.db.backends - DEBUG - (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
2023-03-08 12:19:41,407 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
2023-03-08 12:19:41,407 - django.db.backends - DEBUG - (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(4,); alias=default
2023-03-08 12:19:41,407 - django.db.backends - DEBUG - (0.000) BEGIN; args=None; alias=default
2023-03-08 12:19:41,408 - django.db.backends - DEBUG - (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 4, 'add_contenttype'), ('Can change content type', 4, 'change_contenttype'), ('Can delete content type', 4, 'delete_contenttype'), ('Can view content type', 4, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 4, 'add_contenttype', 'Can change content type', 4, 'change_contenttype', 'Can delete content type', 4, 'delete_contenttype', 'Can view content type', 4, 'view_contenttype'); alias=default
2023-03-08 12:19:41,408 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
2023-03-08 12:19:41,409 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
2023-03-08 12:19:41,409 - django.db.backends - DEBUG - (0.000) BEGIN; args=None; alias=default
2023-03-08 12:19:41,409 - django.db.backends - DEBUG - (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
2023-03-08 12:19:41,410 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
2023-03-08 12:19:41,410 - django.db.backends - DEBUG - (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
2023-03-08 12:19:41,410 - django.db.backends - DEBUG - (0.000) BEGIN; args=None; alias=default
2023-03-08 12:19:41,410 - django.db.backends - DEBUG - (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 5, 'add_session'), ('Can change session', 5, 'change_session'), ('Can delete session', 5, 'delete_session'), ('Can view session', 5, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 5, 'add_session', 'Can change session', 5, 'change_session', 'Can delete session', 5, 'delete_session', 'Can view session', 5, 'view_session'); alias=default
2023-03-08 12:19:41,411 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
2023-03-08 12:19:41,411 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'app'; args=('app',); alias=default
2023-03-08 12:19:41,411 - django.db.backends - DEBUG - (0.000) BEGIN; args=None; alias=default
2023-03-08 12:19:41,412 - django.db.backends - DEBUG - (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('app', 'customuser'), ('app', 'bank'), ('app', 'customerbankaccount') RETURNING "django_content_type"."id"; args=('app', 'customuser', 'app', 'bank', 'app', 'customerbankaccount'); alias=default
2023-03-08 12:19:41,412 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'app' AND "django_content_type"."model" = 'customuser') LIMIT 21; args=('app', 'customuser'); alias=default
2023-03-08 12:19:41,412 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'app' AND "django_content_type"."model" = 'bank') LIMIT 21; args=('app', 'bank'); alias=default
2023-03-08 12:19:41,413 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'app' AND "django_content_type"."model" = 'customerbankaccount') LIMIT 21; args=('app', 'customerbankaccount'); alias=default
2023-03-08 12:19:41,413 - django.db.backends - DEBUG - (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 6, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 6, 7); alias=default
2023-03-08 12:19:41,413 - django.db.backends - DEBUG - (0.000) BEGIN; args=None; alias=default
2023-03-08 12:19:41,414 - django.db.backends - DEBUG - (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add custom user', 6, 'add_customuser'), ('Can change custom user', 6, 'change_customuser'), ('Can delete custom user', 6, 'delete_customuser'), ('Can view custom user', 6, 'view_customuser'), ('Can add bank', 7, 'add_bank'), ('Can change bank', 7, 'change_bank'), ('Can delete bank', 7, 'delete_bank'), ('Can view bank', 7, 'view_bank'), ('Can add customer bank account', 8, 'add_customerbankaccount'), ('Can change customer bank account', 8, 'change_customerbankaccount'), ('Can delete customer bank account', 8, 'delete_customerbankaccount'), ('Can view customer bank account', 8, 'view_customerbankaccount') RETURNING "auth_permission"."id"; args=('Can add custom user', 6, 'add_customuser', 'Can change custom user', 6, 'change_customuser', 'Can delete custom user', 6, 'delete_customuser', 'Can view custom user', 6, 'view_customuser', 'Can add bank', 7, 'add_bank', 'Can change bank', 7, 'change_bank', 'Can delete bank', 7, 'delete_bank', 'Can view bank', 7, 'view_bank', 'Can add customer bank account', 8, 'add_customerbankaccount', 'Can change customer bank account', 8, 'change_customerbankaccount', 'Can delete customer bank account', 8, 'delete_customerbankaccount', 'Can view customer bank account', 8, 'view_customerbankaccount'); alias=default
2023-03-08 12:19:41,414 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'app'; args=('app',); alias=default
2023-03-08 12:19:41,414 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'authtoken'; args=('authtoken',); alias=default
2023-03-08 12:19:41,414 - django.db.backends - DEBUG - (0.000) BEGIN; args=None; alias=default
2023-03-08 12:19:41,415 - django.db.backends - DEBUG - (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('authtoken', 'token'), ('authtoken', 'tokenproxy') RETURNING "django_content_type"."id"; args=('authtoken', 'token', 'authtoken', 'tokenproxy'); alias=default
2023-03-08 12:19:41,415 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'authtoken' AND "django_content_type"."model" = 'token') LIMIT 21; args=('authtoken', 'token'); alias=default
2023-03-08 12:19:41,416 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'authtoken' AND "django_content_type"."model" = 'tokenproxy') LIMIT 21; args=('authtoken', 'tokenproxy'); alias=default
2023-03-08 12:19:41,416 - django.db.backends - DEBUG - (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (9, 10) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(9, 10); alias=default
2023-03-08 12:19:41,416 - django.db.backends - DEBUG - (0.000) BEGIN; args=None; alias=default
2023-03-08 12:19:41,416 - django.db.backends - DEBUG - (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add Token', 9, 'add_token'), ('Can change Token', 9, 'change_token'), ('Can delete Token', 9, 'delete_token'), ('Can view Token', 9, 'view_token'), ('Can add token', 10, 'add_tokenproxy'), ('Can change token', 10, 'change_tokenproxy'), ('Can delete token', 10, 'delete_tokenproxy'), ('Can view token', 10, 'view_tokenproxy') RETURNING "auth_permission"."id"; args=('Can add Token', 9, 'add_token', 'Can change Token', 9, 'change_token', 'Can delete Token', 9, 'delete_token', 'Can view Token', 9, 'view_token', 'Can add token', 10, 'add_tokenproxy', 'Can change token', 10, 'change_tokenproxy', 'Can delete token', 10, 'delete_tokenproxy', 'Can view token', 10, 'view_tokenproxy'); alias=default
2023-03-08 12:19:41,417 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'authtoken'; args=('authtoken',); alias=default
2023-03-08 12:19:41,417 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'kbapp'; args=('kbapp',); alias=default
2023-03-08 12:19:41,417 - django.db.backends - DEBUG - (0.000) BEGIN; args=None; alias=default
2023-03-08 12:19:41,418 - django.db.backends - DEBUG - (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('kbapp', 'amc') RETURNING "django_content_type"."id"; args=('kbapp', 'amc'); alias=default
2023-03-08 12:19:41,419 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'kbapp' AND "django_content_type"."model" = 'amc') LIMIT 21; args=('kbapp', 'amc'); alias=default
2023-03-08 12:19:41,419 - django.db.backends - DEBUG - (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (11) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(11,); alias=default
2023-03-08 12:19:41,419 - django.db.backends - DEBUG - (0.000) BEGIN; args=None; alias=default
2023-03-08 12:19:41,420 - django.db.backends - DEBUG - (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add amc', 11, 'add_amc'), ('Can change amc', 11, 'change_amc'), ('Can delete amc', 11, 'delete_amc'), ('Can view amc', 11, 'view_amc') RETURNING "auth_permission"."id"; args=('Can add amc', 11, 'add_amc', 'Can change amc', 11, 'change_amc', 'Can delete amc', 11, 'delete_amc', 'Can view amc', 11, 'view_amc'); alias=default
2023-03-08 12:19:41,420 - django.db.backends - DEBUG - (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'kbapp'; args=('kbapp',); alias=default
2023-03-08 12:20:09,160 - django.db.backends - DEBUG - (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2023-03-08 12:20:09,161 - django.db.backends - DEBUG - (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
2023-03-08 12:21:46,399 - django.db.backends - DEBUG - (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2023-03-08 12:21:46,400 - django.db.backends - DEBUG - (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
2023-03-08 12:21:46,401 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2023-03-08 12:21:46,401 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_keys; args=None; alias=default
2023-03-08 12:21:46,401 - django.db.backends - DEBUG - (0.000) BEGIN; args=None; alias=default
2023-03-08 12:21:46,402 - django.db.backends.schema - DEBUG - CREATE TABLE "kbapp_amc" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "created" datetime NOT NULL, "modified" datetime NOT NULL, "is_active" bool NOT NULL, "modified_by" varchar(100) NULL, "created_by" varchar(100) NULL, "name" varchar(200) NOT NULL UNIQUE, "amfi_nav_download_dropdown_code" integer NULL UNIQUE, "amc_assets_under_management" real NULL, "description" varchar(200) NULL, "is_being_sold" bool NOT NULL, "f_amc_code" varchar(3) NULL, "amc_logo" varchar(100) NOT NULL, "amc_website_url" varchar(200) NULL, "scheme_information_document_url" varchar(200) NULL, "nominee_url" varchar(200) NULL, "expense_ratio_url" varchar(200) NULL, "expense_ratio_url_remarks" varchar(200) NULL, "last_nav_pull_date_from_amfi" date NULL, "rta_amc_code" varchar(64) NULL, "is_isip_available" bool NOT NULL, "cio" varchar(150) NULL, "ceo" varchar(150) NULL, "management_trustee" varchar(200) NULL, "start_date" date NULL, "phone" varchar(50) NULL, "email" varchar(100) NULL, "owner_type" varchar(50) NULL, "address1" varchar(200) NULL, "address2" varchar(200) NULL, "address3" varchar(200) NULL, "city" varchar(100) NULL, "pin" integer NULL, "amc_aum_date" datetime NULL); (params None)
2023-03-08 12:21:46,402 - django.db.backends - DEBUG - (0.001) PRAGMA foreign_key_check; args=None; alias=default
2023-03-08 12:21:46,402 - django.db.backends - DEBUG - (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2023-03-08 12:22:40,578 - django.db.backends - DEBUG - (0.001) INSERT INTO "kbapp_amc" ("created", "modified", "is_active", "modified_by", "created_by", "name", "amfi_nav_download_dropdown_code", "amc_assets_under_management", "description", "is_being_sold", "f_amc_code", "amc_logo", "amc_website_url", "scheme_information_document_url", "nominee_url", "expense_ratio_url", "expense_ratio_url_remarks", "last_nav_pull_date_from_amfi", "rta_amc_code", "is_isip_available", "cio", "ceo", "management_trustee", "start_date", "phone", "email", "owner_type", "address1", "address2", "address3", "city", "pin", "amc_aum_date") VALUES ('2023-03-08 12:22:40.577030', '2023-03-08 12:22:40.577094', 1, NULL, NULL, 'Bajaj Finserv Asset Management Limited', NULL, NULL, NULL, 1, NULL, '', NULL, NULL, NULL, NULL, NULL, NULL, '189', 1, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL) RETURNING "kbapp_amc"."id"; args=('2023-03-08 12:22:40.577030', '2023-03-08 12:22:40.577094', True, None, None, 'Bajaj Finserv Asset Management Limited', None, None, None, True, None, '', None, None, None, None, None, None, '189', True, None, None, None, None, None, None, None, None, None, None, None, None, None); alias=default
2023-03-08 12:22:59,398 - django.db.backends - DEBUG - (0.001) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2023-03-08 12:22:59,400 - django.db.backends - DEBUG - (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
2023-03-08 12:23:02,729 - django.db.backends - DEBUG - (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2023-03-08 12:23:02.728217' AND "django_session"."session_key" = 'ecr5frgzdsh5l4bkv4z4uebbs0wtthws') LIMIT 21; args=('2023-03-08 12:23:02.728217', 'ecr5frgzdsh5l4bkv4z4uebbs0wtthws'); alias=default
2023-03-08 12:23:02,730 - django.db.backends - DEBUG - (0.000) SELECT "app_customuser"."id", "app_customuser"."password", "app_customuser"."last_login", "app_customuser"."is_superuser", "app_customuser"."username", "app_customuser"."is_staff", "app_customuser"."is_active", "app_customuser"."date_joined", "app_customuser"."created", "app_customuser"."modified", "app_customuser"."modified_by", "app_customuser"."created_by", "app_customuser"."email", "app_customuser"."first_name", "app_customuser"."middle_name", "app_customuser"."last_name", "app_customuser"."pan_number", "app_customuser"."phone_number" FROM "app_customuser" WHERE "app_customuser"."id" = 1 LIMIT 21; args=(1,); alias=default
2023-03-08 12:23:03,010 - django.db.backends - DEBUG - (0.001) SELECT "django_admin_log"."id", "django_admin_log"."action_time", "django_admin_log"."user_id", "django_admin_log"."content_type_id", "django_admin_log"."object_id", "django_admin_log"."object_repr", "django_admin_log"."action_flag", "django_admin_log"."change_message", "app_customuser"."id", "app_customuser"."password", "app_customuser"."last_login", "app_customuser"."is_superuser", "app_customuser"."username", "app_customuser"."is_staff", "app_customuser"."is_active", "app_customuser"."date_joined", "app_customuser"."created", "app_customuser"."modified", "app_customuser"."modified_by", "app_customuser"."created_by", "app_customuser"."email", "app_customuser"."first_name", "app_customuser"."middle_name", "app_customuser"."last_name", "app_customuser"."pan_number", "app_customuser"."phone_number", "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_admin_log" INNER JOIN "app_customuser" ON ("django_admin_log"."user_id" = "app_customuser"."id") LEFT OUTER JOIN "django_content_type" ON ("django_admin_log"."content_type_id" = "django_content_type"."id") WHERE "django_admin_log"."user_id" = 1 ORDER BY "django_admin_log"."action_time" DESC LIMIT 10; args=(1,); alias=default
2023-03-08 12:23:04,648 - django.db.backends - DEBUG - (0.001) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2023-03-08 12:23:04.645910' AND "django_session"."session_key" = 'ecr5frgzdsh5l4bkv4z4uebbs0wtthws') LIMIT 21; args=('2023-03-08 12:23:04.645910', 'ecr5frgzdsh5l4bkv4z4uebbs0wtthws'); alias=default
2023-03-08 12:23:04,650 - django.db.backends - DEBUG - (0.000) SELECT "app_customuser"."id", "app_customuser"."password", "app_customuser"."last_login", "app_customuser"."is_superuser", "app_customuser"."username", "app_customuser"."is_staff", "app_customuser"."is_active", "app_customuser"."date_joined", "app_customuser"."created", "app_customuser"."modified", "app_customuser"."modified_by", "app_customuser"."created_by", "app_customuser"."email", "app_customuser"."first_name", "app_customuser"."middle_name", "app_customuser"."last_name", "app_customuser"."pan_number", "app_customuser"."phone_number" FROM "app_customuser" WHERE "app_customuser"."id" = 1 LIMIT 21; args=(1,); alias=default
2023-03-08 12:23:04,654 - django.db.backends - DEBUG - (0.000) SELECT COUNT(*) AS "__count" FROM "kbapp_amc"; args=(); alias=default
2023-03-08 12:23:04,654 - django.db.backends - DEBUG - (0.000) SELECT COUNT(*) AS "__count" FROM "kbapp_amc"; args=(); alias=default
2023-03-08 12:23:04,660 - django.db.backends - DEBUG - (0.000) SELECT "kbapp_amc"."id", "kbapp_amc"."created", "kbapp_amc"."modified", "kbapp_amc"."is_active", "kbapp_amc"."modified_by", "kbapp_amc"."created_by", "kbapp_amc"."name", "kbapp_amc"."amfi_nav_download_dropdown_code", "kbapp_amc"."amc_assets_under_management", "kbapp_amc"."description", "kbapp_amc"."is_being_sold", "kbapp_amc"."f_amc_code", "kbapp_amc"."amc_logo", "kbapp_amc"."amc_website_url", "kbapp_amc"."scheme_information_document_url", "kbapp_amc"."nominee_url", "kbapp_amc"."expense_ratio_url", "kbapp_amc"."expense_ratio_url_remarks", "kbapp_amc"."last_nav_pull_date_from_amfi", "kbapp_amc"."rta_amc_code", "kbapp_amc"."is_isip_available", "kbapp_amc"."cio", "kbapp_amc"."ceo", "kbapp_amc"."management_trustee", "kbapp_amc"."start_date", "kbapp_amc"."phone", "kbapp_amc"."email", "kbapp_amc"."owner_type", "kbapp_amc"."address1", "kbapp_amc"."address2", "kbapp_amc"."address3", "kbapp_amc"."city", "kbapp_amc"."pin", "kbapp_amc"."amc_aum_date" FROM "kbapp_amc" ORDER BY "kbapp_amc"."id" DESC; args=(); alias=default
2023-03-08 12:23:04,837 - django.db.backends - DEBUG - (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2023-03-08 12:23:04.835136' AND "django_session"."session_key" = 'ecr5frgzdsh5l4bkv4z4uebbs0wtthws') LIMIT 21; args=('2023-03-08 12:23:04.835136', 'ecr5frgzdsh5l4bkv4z4uebbs0wtthws'); alias=default
2023-03-08 12:23:04,838 - django.db.backends - DEBUG - (0.000) SELECT "app_customuser"."id", "app_customuser"."password", "app_customuser"."last_login", "app_customuser"."is_superuser", "app_customuser"."username", "app_customuser"."is_staff", "app_customuser"."is_active", "app_customuser"."date_joined", "app_customuser"."created", "app_customuser"."modified", "app_customuser"."modified_by", "app_customuser"."created_by", "app_customuser"."email", "app_customuser"."first_name", "app_customuser"."middle_name", "app_customuser"."last_name", "app_customuser"."pan_number", "app_customuser"."phone_number" FROM "app_customuser" WHERE "app_customuser"."id" = 1 LIMIT 21; args=(1,); alias=default
2023-03-08 12:23:11,058 - django.db.backends - DEBUG - (0.001) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2023-03-08 12:23:11.053717' AND "django_session"."session_key" = 'ecr5frgzdsh5l4bkv4z4uebbs0wtthws') LIMIT 21; args=('2023-03-08 12:23:11.053717', 'ecr5frgzdsh5l4bkv4z4uebbs0wtthws'); alias=default
2023-03-08 12:23:11,060 - django.db.backends - DEBUG - (0.000) SELECT "app_customuser"."id", "app_customuser"."password", "app_customuser"."last_login", "app_customuser"."is_superuser", "app_customuser"."username", "app_customuser"."is_staff", "app_customuser"."is_active", "app_customuser"."date_joined", "app_customuser"."created", "app_customuser"."modified", "app_customuser"."modified_by", "app_customuser"."created_by", "app_customuser"."email", "app_customuser"."first_name", "app_customuser"."middle_name", "app_customuser"."last_name", "app_customuser"."pan_number", "app_customuser"."phone_number" FROM "app_customuser" WHERE "app_customuser"."id" = 1 LIMIT 21; args=(1,); alias=default
2023-03-08 12:23:11,062 - django.db.backends - DEBUG - (0.000) SELECT COUNT(*) AS "__count" FROM "kbapp_amc"; args=(); alias=default
2023-03-08 12:23:11,063 - django.db.backends - DEBUG - (0.000) SELECT COUNT(*) AS "__count" FROM "kbapp_amc"; args=(); alias=default
2023-03-08 12:23:11,067 - django.db.backends - DEBUG - (0.000) SELECT "kbapp_amc"."id", "kbapp_amc"."created", "kbapp_amc"."modified", "kbapp_amc"."is_active", "kbapp_amc"."modified_by", "kbapp_amc"."created_by", "kbapp_amc"."name", "kbapp_amc"."amfi_nav_download_dropdown_code", "kbapp_amc"."amc_assets_under_management", "kbapp_amc"."description", "kbapp_amc"."is_being_sold", "kbapp_amc"."f_amc_code", "kbapp_amc"."amc_logo", "kbapp_amc"."amc_website_url", "kbapp_amc"."scheme_information_document_url", "kbapp_amc"."nominee_url", "kbapp_amc"."expense_ratio_url", "kbapp_amc"."expense_ratio_url_remarks", "kbapp_amc"."last_nav_pull_date_from_amfi", "kbapp_amc"."rta_amc_code", "kbapp_amc"."is_isip_available", "kbapp_amc"."cio", "kbapp_amc"."ceo", "kbapp_amc"."management_trustee", "kbapp_amc"."start_date", "kbapp_amc"."phone", "kbapp_amc"."email", "kbapp_amc"."owner_type", "kbapp_amc"."address1", "kbapp_amc"."address2", "kbapp_amc"."address3", "kbapp_amc"."city", "kbapp_amc"."pin", "kbapp_amc"."amc_aum_date" FROM "kbapp_amc" ORDER BY "kbapp_amc"."id" DESC; args=(); alias=default
2023-03-08 12:23:11,096 - django.db.backends - DEBUG - (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2023-03-08 12:23:11.095228' AND "django_session"."session_key" = 'ecr5frgzdsh5l4bkv4z4uebbs0wtthws') LIMIT 21; args=('2023-03-08 12:23:11.095228', 'ecr5frgzdsh5l4bkv4z4uebbs0wtthws'); alias=default
2023-03-08 12:23:11,097 - django.db.backends - DEBUG - (0.000) SELECT "app_customuser"."id", "app_customuser"."password", "app_customuser"."last_login", "app_customuser"."is_superuser", "app_customuser"."username", "app_customuser"."is_staff", "app_customuser"."is_active", "app_customuser"."date_joined", "app_customuser"."created", "app_customuser"."modified", "app_customuser"."modified_by", "app_customuser"."created_by", "app_customuser"."email", "app_customuser"."first_name", "app_customuser"."middle_name", "app_customuser"."last_name", "app_customuser"."pan_number", "app_customuser"."phone_number" FROM "app_customuser" WHERE "app_customuser"."id" = 1 LIMIT 21; args=(1,); alias=default
